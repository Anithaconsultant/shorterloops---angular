# Generated by Django 5.1.3 on 2025-10-17 05:11

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('UserId', models.AutoField(primary_key=True, serialize=False)),
                ('Username', models.CharField(max_length=70, unique=True)),
                ('email', models.CharField(max_length=50, unique=True)),
                ('mobile', models.CharField(max_length=20)),
                ('wallet', models.CharField(default=2000, max_length=70)),
                ('status', models.CharField(max_length=70)),
                ('User_cityid', models.CharField(blank=True, default=0, max_length=11)),
                ('Role', models.CharField(blank=True, max_length=100)),
                ('cartId', models.CharField(blank=True, default=0, max_length=30)),
                ('avatar', models.CharField(blank=True, max_length=30)),
                ('gender', models.CharField(blank=True, max_length=30)),
                ('login', models.CharField(default=0, max_length=30)),
                ('update_count', models.IntegerField(default=0)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'usertable',
            },
        ),
        migrations.CreateModel(
            name='Auditlog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('action', models.CharField(max_length=2000)),
                ('AssetId', models.CharField(max_length=100)),
                ('CityId', models.CharField(blank=True, max_length=100)),
                ('Bottle_loc', models.CharField(default='Supermarket shelf', max_length=100)),
                ('TransactionId', models.CharField(blank=True, max_length=100)),
                ('Bottle_Code', models.CharField(blank=True, max_length=100)),
                ('TransactionDate', models.CharField(blank=True, max_length=100)),
                ('FromFacility', models.CharField(default='Supermarket shelf', max_length=100)),
                ('ToFacility', models.CharField(blank=True, max_length=100)),
                ('ContentCode', models.CharField(blank=True, max_length=100)),
                ('Current_Content_Code', models.CharField(blank=True, max_length=100)),
                ('assetStatus', models.CharField(default='Full', max_length=100)),
                ('remQuantity', models.CharField(blank=True, max_length=100)),
                ('Unit', models.CharField(blank=True, max_length=100)),
                ('ManufactureDate', models.CharField(blank=True, max_length=100)),
                ('refillCount', models.CharField(blank=True, max_length=100)),
                ('currentselfrefillCount', models.CharField(blank=True, max_length=100)),
                ('currentplantrefillCount', models.CharField(blank=True, max_length=100)),
                ('LatestFillDate', models.CharField(blank=True, max_length=100)),
                ('bottleRetireDate', models.CharField(blank=True, max_length=100)),
                ('RetireReason', models.CharField(blank=True, max_length=100)),
                ('userName', models.CharField(default='', max_length=100)),
            ],
            options={
                'db_table': 'audit_log',
            },
        ),
        migrations.CreateModel(
            name='Bottleprice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BottleType', models.CharField(max_length=70)),
                ('OriginalPrice', models.FloatField(default=0.0)),
                ('percentReturnGood', models.FloatField(default=0.0)),
                ('percentReturnDamage', models.FloatField(default=0.0)),
                ('percentPurchasediscount_refill', models.FloatField(default=0.0)),
                ('percentEnvTax_newbottle', models.FloatField(default=0.0)),
                ('percentEnvTax_refillbottle', models.FloatField(default=0.0)),
                ('Fine_Discard', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'bottleprice',
            },
        ),
        migrations.CreateModel(
            name='Cashflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TransactionId', models.CharField(max_length=70, unique=True)),
                ('Amount', models.CharField(max_length=70)),
                ('DebitFacility', models.CharField(max_length=70)),
                ('CreditFacility', models.CharField(max_length=70)),
                ('Purpose', models.CharField(max_length=70)),
                ('Content_Amt', models.CharField(default='', max_length=70)),
                ('Container_Amt', models.CharField(default='', max_length=70)),
            ],
            options={
                'db_table': 'Cashflow',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('CityId', models.AutoField(primary_key=True, serialize=False)),
                ('CityName', models.CharField(max_length=70, unique=True)),
                ('MayorId', models.IntegerField(null=True, unique=True)),
                ('Clocktickrate', models.IntegerField(default=1)),
                ('CurrentTime', models.IntegerField(default=0)),
                ('CurrentDay', models.IntegerField(default=0)),
                ('Citystartdate', models.DateField(default=datetime.date.today)),
                ('CityCreateTime', models.TimeField(auto_now=True)),
                ('Status', models.CharField(max_length=70, null=True)),
                ('cityavatar', models.CharField(max_length=70, null=True)),
                ('display_at_dustbin', models.BooleanField(blank=True, default=False, null=True)),
                ('garbage_truck_announcement', models.BooleanField(blank=True, default=False, null=True)),
                ('timer_paused', models.BooleanField(blank=True, default=False, null=True)),
                ('cityrul_notification', models.CharField(default='0', max_length=70, null=True)),
            ],
            options={
                'db_table': 'city',
            },
        ),
        migrations.CreateModel(
            name='Cityrule',
            fields=[
                ('ruleId', models.AutoField(primary_key=True, serialize=False)),
                ('cityId', models.CharField(blank=True, max_length=70)),
                ('rule_number', models.IntegerField(editable=False, unique=True)),
                ('day_number', models.CharField(blank=True, max_length=70)),
                ('time_in_hours', models.FloatField(blank=True, null=True)),
                ('virgin_plastic_price', models.FloatField(blank=True, null=True)),
                ('recycled_plastic_price', models.FloatField(blank=True, null=True)),
                ('envtx_p_shampoo', models.FloatField(blank=True, null=True)),
                ('envtx_p_bvb', models.FloatField(blank=True, null=True)),
                ('envtx_p_brcb', models.FloatField(blank=True, null=True)),
                ('envtx_p_brfb', models.FloatField(blank=True, null=True)),
                ('envtx_p_uvb', models.FloatField(blank=True, null=True)),
                ('envtx_p_urcb', models.FloatField(blank=True, null=True)),
                ('envtx_p_urfb', models.FloatField(blank=True, null=True)),
                ('envtx_r_bvb', models.FloatField(blank=True, null=True)),
                ('envtx_r_brcb', models.FloatField(blank=True, null=True)),
                ('envtx_r_brfb', models.FloatField(blank=True, null=True)),
                ('envtx_r_uvb', models.FloatField(blank=True, null=True)),
                ('envtx_r_urcb', models.FloatField(blank=True, null=True)),
                ('envtx_r_urfb', models.FloatField(blank=True, null=True)),
                ('envtx_c_bvb', models.FloatField(blank=True, null=True)),
                ('envtx_c_brcb', models.FloatField(blank=True, null=True)),
                ('envtx_c_brfb', models.FloatField(blank=True, null=True)),
                ('envtx_c_uvb', models.FloatField(blank=True, null=True)),
                ('envtx_c_urcb', models.FloatField(blank=True, null=True)),
                ('envtx_c_urfb', models.FloatField(blank=True, null=True)),
                ('fine_for_throwing_bottle', models.FloatField(blank=True, null=True)),
                ('dustbinning_fine', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Cityrule',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('Facility_cityid', models.CharField(max_length=60)),
                ('FacilityId', models.AutoField(primary_key=True, serialize=False)),
                ('Facilityname', models.CharField(max_length=60)),
                ('Owner_status', models.CharField(blank=True, default='', max_length=70)),
                ('Owner_id', models.CharField(blank=True, default='', max_length=70)),
                ('Cashbox', models.CharField(blank=True, default='', max_length=70)),
                ('LedgerId', models.CharField(blank=True, default='', max_length=70)),
                ('cartId', models.CharField(blank=True, default='', max_length=70)),
            ],
            options={
                'db_table': 'facility',
            },
        ),
        migrations.CreateModel(
            name='Shampooprice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BottleContent', models.CharField(max_length=70)),
                ('UnitPrice', models.FloatField(default=0.0)),
                ('Discount', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'Shampooprice',
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('AssetDbId', models.AutoField(primary_key=True, serialize=False)),
                ('AssetId', models.CharField(blank=True, max_length=1000)),
                ('CategoryCode', models.CharField(blank=True, max_length=1000)),
                ('Bottle_Code', models.CharField(blank=True, max_length=1000)),
                ('Content_Code', models.CharField(blank=True, max_length=1000)),
                ('Current_Content_Code', models.CharField(blank=True, max_length=1000)),
                ('Quantity', models.CharField(blank=True, max_length=70)),
                ('remQuantity', models.CharField(blank=True, max_length=70)),
                ('Units', models.CharField(blank=True, max_length=70)),
                ('Bottle_loc', models.CharField(blank=True, max_length=1000)),
                ('Bottle_Status', models.CharField(blank=True, max_length=1000)),
                ('DOM', models.CharField(blank=True, max_length=70)),
                ('Max_Refill_Count', models.IntegerField(blank=True, default=5)),
                ('Current_PlantRefill_Count', models.IntegerField(blank=True, default=0)),
                ('Current_SelfRefill_Count', models.IntegerField(blank=True, default=0)),
                ('Latest_Refill_Date', models.CharField(blank=True, max_length=70)),
                ('Retirement_Date', models.CharField(blank=True, max_length=70)),
                ('Retire_Reason', models.CharField(blank=True, max_length=70)),
                ('Content_Price', models.CharField(blank=True, max_length=70)),
                ('Bottle_Price', models.CharField(blank=True, max_length=70)),
                ('Redeem_Good', models.CharField(blank=True, max_length=70)),
                ('Redeem_Damaged', models.CharField(blank=True, max_length=70)),
                ('Discount_RefillB', models.CharField(blank=True, max_length=70)),
                ('Env_Tax_Customer', models.CharField(blank=True, max_length=70)),
                ('Env_Tax_Retailer', models.CharField(blank=True, max_length=70)),
                ('Env_Tax_Producer', models.CharField(blank=True, max_length=70)),
                ('Discard_Dustbin_fine', models.CharField(blank=True, max_length=70)),
                ('Discard_Garbagetruck_fine', models.CharField(blank=True, max_length=70)),
                ('Transaction_Id', models.CharField(blank=True, default='', max_length=70)),
                ('Transaction_Date', models.CharField(blank=True, max_length=70)),
                ('Fromfacility', models.CharField(blank=True, max_length=70)),
                ('Tofacility', models.CharField(blank=True, max_length=70)),
                ('purchased', models.BooleanField(default=False)),
                ('dragged', models.BooleanField(default=False)),
                ('correlation_id', models.CharField(blank=True, max_length=100, null=True)),
                ('Asset_CityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.city')),
            ],
            options={
                'db_table': 'Asset',
            },
        ),
        migrations.CreateModel(
            name='BottleInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('producer_code', models.CharField(db_index=True, max_length=255)),
                ('bottle_type', models.CharField(choices=[('BVB', 'BVB'), ('BRCB', 'BRCB'), ('BRFB', 'BRFB'), ('UVB', 'UVB'), ('URCB', 'URCB'), ('URFB', 'URFB')], max_length=4)),
                ('cycle_number', models.IntegerField()),
                ('current_total_stock', models.PositiveIntegerField(default=0)),
                ('bottles_sold_to_supermarket_prev_cycle', models.PositiveIntegerField(default=0)),
                ('bottles_bought_by_consumers', models.PositiveIntegerField(default=0)),
                ('bottles_returned_good', models.PositiveIntegerField(default=0)),
                ('bottles_returned_damaged', models.PositiveIntegerField(default=0)),
                ('manufacturing_day', models.PositiveIntegerField(blank=True, null=True)),
                ('content_price_per_ml', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bottle_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_mrp', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_refill_count', models.PositiveIntegerField(default=1)),
                ('redeem_value_good', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('redeem_value_damaged', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('supermarket_commission_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('consumer_discount_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('bottles_to_produce', models.PositiveIntegerField(default=0)),
                ('bottles_to_sell_to_supermarket', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('Bottle_CityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.city')),
            ],
            options={
                'db_table': 'bottle_inventory',
                'unique_together': {('producer_code', 'bottle_type', 'Bottle_CityId', 'cycle_number')},
            },
        ),
    ]
