# Generated by Django 4.1.5 on 2023-07-04 06:28

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('CityId', models.AutoField(primary_key=True, serialize=False)),
                ('CityName', models.CharField(max_length=70, unique=True)),
                ('MayorId', models.IntegerField(null=True, unique=True)),
                ('Clocktickrate', models.IntegerField(default=100)),
                ('Citystartdate', models.DateField(default=datetime.date.today)),
                ('CityCreateTime', models.TimeField(auto_now=True)),
                ('Status', models.CharField(max_length=70, null=True)),
            ],
            options={
                'db_table': 'city',
            },
        ),
        migrations.CreateModel(
            name='Cityrule',
            fields=[
                ('rule_city', models.IntegerField(blank=True)),
                ('ruleId', models.AutoField(primary_key=True, serialize=False)),
                ('Date_create', models.DateField(blank=True, default=datetime.date.today)),
                ('Time', models.TimeField()),
                ('virginplastic_cost', models.IntegerField(blank=True)),
                ('recycledplastic_cost', models.IntegerField(blank=True)),
                ('EnvTx_P_shampoo', models.IntegerField(blank=True)),
                ('EnvTx_P_beverage', models.IntegerField(blank=True)),
                ('EnvTx_P_cleaner', models.IntegerField(blank=True)),
                ('EnvTx_P_pickle', models.IntegerField(blank=True)),
                ('EnvTx_P_Bvb', models.IntegerField(blank=True)),
                ('EnvTx_P_Brcb', models.IntegerField(blank=True)),
                ('EnvTx_P_Brfb', models.IntegerField(blank=True)),
                ('EnvTx_P_Uvb', models.IntegerField(blank=True)),
                ('EnvTx_P_Urcb', models.IntegerField(blank=True)),
                ('EnvTx_P_Urfb', models.IntegerField(blank=True)),
                ('EnvTx_UB_v_m', models.IntegerField(blank=True)),
                ('EnvTx_UB_rc_m', models.IntegerField(blank=True)),
                ('EnvTx_UB_xx_c', models.IntegerField(blank=True)),
                ('EnvTx_R_Bvb', models.IntegerField(blank=True)),
                ('EnvTx_R_Brcb', models.IntegerField(blank=True)),
                ('EnvTx_R_Brfb', models.IntegerField(blank=True)),
                ('EnvTx_R_Uvb', models.IntegerField(blank=True)),
                ('EnvTx_R_Urcb', models.IntegerField(blank=True)),
                ('EnvTx_R_Urfb', models.IntegerField(blank=True)),
                ('EnvTx_C_Bvb', models.IntegerField(blank=True)),
                ('EnvTx_C_Brcb', models.IntegerField(blank=True)),
                ('EnvTx_C_Brfb', models.IntegerField(blank=True)),
                ('EnvTx_C_Uvb', models.IntegerField(blank=True)),
                ('EnvTx_C_Urcb', models.IntegerField(blank=True)),
                ('EnvTx_C_Urfb', models.IntegerField(blank=True)),
                ('Return_B_G', models.IntegerField(blank=True)),
                ('Return_U_G', models.IntegerField(blank=True)),
                ('Return_U_B', models.IntegerField(blank=True)),
                ('Return_B_B', models.IntegerField(blank=True)),
                ('Dustbin_penalty', models.IntegerField(blank=True)),
                ('Dustbin_display', models.BooleanField(blank=True, default=0)),
                ('Carbage_display', models.BooleanField(blank=True, default=0)),
            ],
            options={
                'db_table': 'Cityrule',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('UserId', models.AutoField(primary_key=True, serialize=False)),
                ('Username', models.CharField(max_length=70, unique=True)),
                ('email', models.CharField(max_length=50, unique=True)),
                ('Password', models.CharField(max_length=70)),
                ('mobile', models.CharField(max_length=20)),
                ('wallet', models.CharField(default=2000, max_length=70)),
                ('status', models.CharField(max_length=70)),
                ('User_cityid', models.CharField(blank=True, default=0, max_length=11)),
                ('Role', models.CharField(blank=True, max_length=30)),
                ('cartId', models.CharField(blank=True, default=0, max_length=30)),
                ('avatar', models.CharField(blank=True, max_length=30)),
                ('gender', models.CharField(blank=True, max_length=30)),
                ('login', models.CharField(default=0, max_length=30)),
            ],
            options={
                'db_table': 'usertable',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('Facility_cityid', models.CharField(max_length=60)),
                ('FacilityId', models.AutoField(primary_key=True, serialize=False)),
                ('Facilityname', models.CharField(max_length=60)),
                ('Owner_status', models.CharField(blank=True, default='', max_length=70)),
                ('Owner_id', models.CharField(blank=True, default='', max_length=70)),
                ('Cashbox', models.CharField(blank=True, default='', max_length=70)),
                ('LedgerId', models.CharField(blank=True, default='', max_length=70)),
                ('cartId', models.CharField(blank=True, default='', max_length=70)),
            ],
            options={
                'db_table': 'facility',
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('AssetDbId', models.AutoField(primary_key=True, serialize=False)),
                ('AssetId', models.CharField(blank=True, max_length=1000)),
                ('CategoryCode', models.CharField(blank=True, max_length=1000)),
                ('Bottle_Code', models.CharField(blank=True, max_length=1000)),
                ('Content_Code', models.CharField(blank=True, max_length=1000)),
                ('Quantity', models.CharField(blank=True, max_length=70)),
                ('Units', models.CharField(blank=True, max_length=70)),
                ('Bottle_loc', models.CharField(blank=True, max_length=1000)),
                ('Bottle_Status', models.CharField(blank=True, max_length=1000)),
                ('DOM', models.CharField(blank=True, max_length=70)),
                ('Max_Refill_Count', models.IntegerField(blank=True, default=5)),
                ('Current_Refill_Count', models.IntegerField(blank=True, default=5)),
                ('Latest_Refill_Date', models.CharField(blank=True, max_length=70)),
                ('Retirement_Date', models.CharField(blank=True, max_length=70)),
                ('Retire_Reason', models.CharField(blank=True, max_length=70)),
                ('Content_Price', models.CharField(blank=True, max_length=70)),
                ('Bottle_Price', models.CharField(blank=True, max_length=70)),
                ('Redeem_Good', models.CharField(blank=True, max_length=70)),
                ('Redeem_Damaged', models.CharField(blank=True, max_length=70)),
                ('Discount_RefillB', models.CharField(blank=True, max_length=70)),
                ('Env_Tax', models.CharField(blank=True, max_length=70)),
                ('Discard_fine', models.CharField(blank=True, max_length=70)),
                ('Transaction_Id', models.CharField(blank=True, max_length=70)),
                ('Transaction_Date', models.CharField(blank=True, max_length=70)),
                ('Fromfacility', models.CharField(blank=True, max_length=70)),
                ('Tofacility', models.CharField(blank=True, max_length=70)),
                ('Asset_CityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.city')),
            ],
            options={
                'db_table': 'Asset',
            },
        ),
    ]
